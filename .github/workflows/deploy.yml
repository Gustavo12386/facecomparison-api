# Simple workflow for deploying static content to GitHub Pages
name: Deploy on AWS and GitHub Pages

on:
  push:
    branches: ["main"]
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write
  checks: write

concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
      
      - name: Set up JDK 21
        uses: actions/setup-java@v3
        with:
          java-version: '21'
          distribution: 'zulu'

      - name: Maven install
        run: mvn --batch-mode clean install

      - name: Verify JAR exists
        run: |
          echo "Conteúdo da pasta target:"
          ls -lh target
          echo "Conteúdo da pasta target (com caracteres visíveis):"
          ls target | cat -v
          echo "Verificando se o JAR foi gerado..."
          if [ -f target/facecomparsion-0.0.1-SNAPSHOT.jar ]; then
            echo "Arquivo JAR encontrado."
          else
            echo "Arquivo JAR NÃO encontrado."
            ls -l target
            exit 1
          fi

      - name: Publish Test Report
        uses: mikepenz/action-junit-report@v3
        if: success() || failure()
        with:
          report_paths: '**/target/surefire-reports/TEST-*.xml'

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: jar-artifacts
          path: "target/facecomparsion-0.0.1-SNAPSHOT.jar"


  deployBackend:
    needs: build
    runs-on: ubuntu-latest
    environment:
      name: aws
      url: ${{ steps.manifest.outputs.url }}

    steps:
      - uses: actions/checkout@v2
      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          name: jar-artifacts
          path: app/target
      - name: Install Plugin and Deploy
        uses: serverless/github-action@v3.2
        with:
          args: -c "serverless plugin install --name serverless-manifest-plugin && serverless deploy --stage prd"
          entrypoint: /bin/sh
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      - name: manifest
        id: manifest
        run: |
          url=$(cat .serverless/manifest.json | jq -r '.prd.urls.apiGateway')
          echo "::set-output name=url::$url"
    outputs:
      apiGatewayUrl: ${{ steps.manifest.outputs.url }}
      

  deployFrontend:
    needs: deployBackend
    environment:
      name: GH_PAGES_TOKEN
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Setup Pages
        uses: actions/configure-pages@v3

      - name: Switch api URL in index.html
        run: |
          sed -i "s/\${URL_TO_SUBSTITUTE}/$(echo '${{ needs.deployBackend.outputs.apiGatewayUrl }}' | sed 's/\//\\\//g')/g" src/main/resources/static/index.html

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v2
        with:
          path: 'src/main/resources/static/'
          
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v2